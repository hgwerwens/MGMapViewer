apply plugin: 'com.android.application'

def versionMajor = "0.9.5"
def versionSuffix = "pre"

def getDate() {
    return new Date().format('yyyyMMdd_HHmmss')
}

afterEvaluate {

    task myclean {
        assembleRelease.dependsOn( myclean )
        assembleDebug.dependsOn( myclean )
        delete "${buildDir}/outputs/apk"
    }
    task copyReleaseApk(type: Copy, dependsOn: assembleRelease) {
        from("$buildDir/outputs/apk/release") {
            include '**/*.apk'
            exclude '**/*unsigned.apk', '**/*unaligned.apk'
        }
        into '../apk/release'
    }
    task copyDebugApk(type: Copy, dependsOn: assembleDebug) {
        from("$buildDir/outputs/apk/debug") {
            include '**/*.apk'
            exclude '**/*unsigned.apk', '**/*unaligned.apk'
        }
        into '../apk/debug'
    }
    task zipReleaseApk(type: Zip, dependsOn: copyReleaseApk ){
        from("$buildDir/outputs/apk/release") {
            exclude '**/*unsigned.apk', '**/*unaligned.apk'
        }
        archiveName( "apk.zip" )
        destinationDirectory = file( "../apk/release")
    }
    task zipDebugApk(type: Zip, dependsOn: copyDebugApk ){
        from("$buildDir/outputs/apk/debug") {
            exclude '**/*unsigned.apk', '**/*unaligned.apk'
        }
        archiveName( "apk.zip" )
        destinationDirectory = file( "../apk/debug")
    }

    task _mgmapPublish (dependsOn: ['zipReleaseApk','zipDebugApk']){
        doLast {
            System.out.println( "_mgmapPublish finished" )
        }
    }

}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "mg.mgmap"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "${versionMajor}-${versionSuffix}-${getDate()}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "${parent.name}-${output.baseName}-${variant.versionName}.apk"

        }

     }

    sourceSets {
        main {
//            manifest.srcFile 'AndroidManifest.xml'
//            java.srcDirs = ['src/main/java']
//            resources.srcDirs = ['src']
//            res.srcDirs = ['res']
//            assets.srcDirs = ['assets']
            file("${rootDir}/sqlite-android/natives").eachDir() { dir ->
                jniLibs.srcDirs += "${dir.path}/lib"
            }
        }
    }

    signingConfigs {
        release {
            keyAlias 'mgm'
            storeFile file('../mgm.jks')
            File propsFile = file('../secure.properties');
            if (propsFile.exists()) {
                Properties props = new Properties();
                props.load(new FileInputStream(propsFile))
                storePassword props.getProperty('storePassword')
                keyPassword props.getProperty('keyPassword')
            }

            // Optional, specify signing versions used
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.preference:preference:1.1.1'
    api 'net.sf.kxml:kxml2:2.3.0'

    implementation 'com.android.support:preference-v7:29.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation files('libs/javax.json-1.1.2.jar')
    implementation files('libs/javax.json-api-1.1.2.jar')

    implementation 'com.google.api-client:google-api-client:1.30.9'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.27.0'
//    implementation 'com.google.apis:google-api-services-driveactivity:v2-rev20190423-1.27.0'
    implementation 'com.google.apis:google-api-services-drive:v3-rev20200413-1.30.9'

    implementation 'net.lingala.zip4j:zip4j:2.6.1'
//    implementation 'net.lingala.zip4j:zip4j:1.3.2'
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"

}
